global
	log /dev/log	local0
	log /dev/log	local1 notice
	log 127.0.0.1	local0

	chroot /var/lib/haproxy
	stats socket /run/haproxy/admin.sock mode 660 level admin
	stats timeout 30s
	user haproxy
	group haproxy
	daemon

	#maxconn 2048
	maxconn 8000

	# Default SSL material locations
	ca-base /etc/ssl/certs
	crt-base /etc/ssl/private

	# Default ciphers to use on SSL-enabled listening sockets.
	# For more information, see ciphers(1SSL). This list is from:
	#  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
	ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS
	ssl-default-bind-options no-sslv3
	tune.ssl.default-dh-param 2048

defaults
	log	global
	mode	http
	option	forwardfor
	option	http-server-close
	option	httplog
	option	dontlognull
	option	redispatch
	retries	3
        timeout connect 5000
        timeout client  50000
        timeout server  100000
	errorfile 400 /etc/haproxy/errors/400.http
	errorfile 403 /etc/haproxy/errors/403.http
	errorfile 408 /etc/haproxy/errors/408.http
	errorfile 500 /etc/haproxy/errors/500.http
	errorfile 502 /etc/haproxy/errors/502.http
	errorfile 503 /etc/haproxy/errors/503.http
	errorfile 504 /etc/haproxy/errors/504.http

	stats	enable
	stats	uri /hap_stats
	stats 	realm Haproxy\ Statistics
	stats	auth trogdor:12!peasants!burning

frontend http-in
	bind 	*:80
	maxconn 4000

	# Table definition  
	#stick-table type ip size 100k expire 30s store conn_cur

	# Shut the new connection as long as the client has already 10 opened 
  	#tcp-request connection reject if { src_conn_cur ge 10 }
	#tcp-request connection track-sc1 src

	reqadd	X-Forwarded-Proto:\ http
	default_backend servers
	acl letsencrypt-acl path_beg /.well-known/acme-challenge/
	acl api hdr(authorization) -m found
	acl https-redirects hdr(Host) -i -f /etc/haproxy/https-redirects.lst
	redirect scheme https code 301 if !api !letsencrypt-acl
	use_backend letsencrypt-backend if letsencrypt-acl

frontend https-in
	bind	*:443 ssl crt-list /etc/haproxy/crt-list.txt
    maxconn 4000
	reqadd X-Forwarded-Proto:\ https
	default_backend servers

backend servers
	server server1 localhost:8080 maxconn 1024
	http-response	set-header X-HAProxy true

backend letsencrypt-backend
	server letsencrypt 127.0.0.1:54321